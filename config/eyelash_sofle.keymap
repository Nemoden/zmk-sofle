#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};


/ {
    behaviors {
        tp: tap_preferred {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <180>;
            quick-tap-ms = <130>;
            //require-prior-idle-ms = <130>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <180>;
            quick-tap-ms = <130>;
            //require-prior-idle-ms = <130>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
        lt: layer_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <180>;
            quick-tap-ms = <130>;
            //require-prior-idle-ms = <130>;
            bindings = <&mo>, <&kp>;
            display-name = "Layer-Tap";
        };
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;
        tap-ms = <100>;
    };

    keymap {
        compatible = "zmk,keymap";
// 3rd row
//&kp LSHIFT  &lt 1 A    &mt_ctrl_s    &mt_alt_d     &mt_gui_f &kp G      &kp LEFT_ARROW   &kp H      &mt_gui_j  &mt_alt_k  &mt_ctrl_l       &lt 2 SEMI  &kp APOS

        layer0 {
            bindings = <
&kp GRAVE       &kp N1           &kp N2          &kp N3           &kp N4           &kp N5             &kp UP_ARROW       &kp N6           &kp N7           &kp N8         &kp N9        &kp N0        &kp BACKSPACE
&kp TAB         &kp Q            &kp W           &kp E            &kp R            &kp T              &kp DOWN_ARROW     &kp Y            &kp U            &kp I          &kp O         &kp P         &kp LBKT
&tp LSHIFT ESC  &lt 1 A          &hm LCTRL S     &hm LALT D       &hm LGUI F       &kp G              &kp LEFT_ARROW     &kp H            &hm RGUI J       &hm RALT K     &hm RCTRL L   &lt 2 SEMI    &kp APOS
&kp LCTRL       &kp Z            &kp X           &kp C            &kp V            &kp B              &kp RIGHT_ARROW    &kp N            &kp M            &kp COMMA      &kp DOT       &kp SLASH     &kp RBKT
&kp C_MUTE      &trans           &kp LALT        &kp LGUI         &lt 1 BSLH       &kp SPACE          &kp ENTER          &kp ENTER        &lt 2 MINUS      &kp EQUAL      &trans        &kp CAPS
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "LAYER0";
        };

        layer1 {
            bindings = <
&kp ESC         &kp F1           &kp F2          &kp F3           &kp F4           &kp F5             &mmv MOVE_UP       &kp F6           &kp F7           &kp F8         &kp F9        &kp F10       &trans
&trans          &kp GRAVE        &mkp LCLK       &kp UP           &mkp RCLK        &mkp MB4           &mmv MOVE_DOWN     &kp PG_UP        &kp LBKT         &kp UP         &kp RBKT      &kp MINUS     &kp EQUAL
&trans          &kp TILDE        &kp LEFT        &kp DOWN         &kp RIGHT        &mkp MB5           &mmv MOVE_LEFT     &kp PG_DN        &kp LBRC         &kp DOWN       &kp RBRC      &kp UNDER     &kp PLUS
&trans          &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &rgb_ug RGB_SPI    &mmv MOVE_RIGHT    &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &kp INSERT     &kp F11       &kp F12       &trans
&kp C_MUTE      &trans           &trans          &trans           &trans           &trans             &mkp LCLK          &trans           &trans           &trans         &trans        &trans
            >;


            sensor-bindings = <&scroll_encoder>;
            display-name = "LAYER1";
        };

        layer_2 {
            bindings = <
&kp TILDE       &bt BT_SEL 0     &bt BT_SEL 1    &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4       &mmv MOVE_UP       &kp F6           &kp F7           &kp F8           &kp F9        &kp F10     &trans
&trans          &bt BT_CLR       &bt BT_CLR_ALL  &trans           &trans           &trans             &mmv MOVE_DOWN     &trans           &trans           &kp F11          &kp F12       &kp UNDER   &kp PLUS
&trans          &out OUT_USB     &out OUT_BLE    &trans           &trans           &trans             &mmv MOVE_LEFT     &trans           &trans           &trans           &trans        &kp LBRC    &kp RBRC
&trans          &sys_reset       &trans          &bootloader      &trans           &trans             &mmv MOVE_RIGHT    &trans           &trans           &sys_reset       &soft_off     &bootloader &trans
&trans          &trans           &trans          &trans           &trans           &trans             &mkp LCLK          &trans           &trans           &trans           &trans        &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
